# Generated by Django 4.2.2 on 2023-06-21 17:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=15, unique=True)),
                ('no_wa', models.CharField(max_length=15, null=True, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('confirm_password', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('User', 'User'), ('Admin', 'Admin')], default='User', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Jadwal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_pegawai', models.CharField(max_length=100, null=True)),
                ('jam', models.TimeField(max_length=5)),
                ('tanggal', models.DateField()),
                ('sibuk', models.CharField(choices=[('Sibuk', 'Sibuk'), ('Tidak Sibuk', 'Tidak Sibuk')], max_length=50, null=True)),
            ],
            options={
                'db_table': 'jadwal',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_layanan', models.CharField(max_length=100, null=True)),
                ('jenis_layanan', models.CharField(choices=[('Eyelash', 'Eyelash'), ('Haircare', 'Haircare'), ('Nails', 'Nails')], max_length=100, null=True)),
                ('harga_layanan', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('foto_service', models.FileField(upload_to='service/')),
                ('deskripsi', models.TextField(max_length=200)),
            ],
            options={
                'db_table': 'layanan',
            },
        ),
        migrations.CreateModel(
            name='Reservasi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_konfirmasi', models.CharField(choices=[('Pending', 'Pending'), ('Disetujui', 'Disetujui'), ('Ditolak', 'Ditolak')], default='Pending', max_length=20)),
                ('nama_lengkap', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('pesan', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('jadwal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.jadwal')),
                ('layanan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.service')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'booking',
            },
        ),
    ]
